# Dockerfile.scraper.fixed
FROM python:3.11.8-slim as builder

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Final image
FROM python:3.11.8-slim
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Chromium and dependencies but don't run version checks during build
RUN apt-get update && apt-get install -y --no-install-recommends \
    chromium \
    chromium-driver \
    ca-certificates \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libgdk-pixbuf2.0-0 \
    libnspr4 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    xdg-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/*

# Add verification script that will run at runtime, not build time
RUN echo '#!/bin/bash\necho "Chrome version: $(chromium --version 2>/dev/null || echo \"Not available in this environment\")"\necho "ChromeDriver version: $(chromedriver --version 2>/dev/null || echo \"Not available in this environment\")"\necho "Starting scraper..."\npython app/tools/scraper_rotation.py\n' > /app/start.sh \
    && chmod +x /app/start.sh

# Set environment variables for Chrome
ENV CHROME_BIN=/usr/bin/chromium
ENV CHROMEDRIVER_PATH=/usr/bin/chromedriver
ENV DOCKER_ENV=true

# Set Chrome options for running in container
ENV CHROME_OPTIONS="--no-sandbox --headless --disable-gpu --disable-dev-shm-usage"

# Copy only necessary source files
COPY backend/app /app/app

# Set Python to not write .pyc files and remove __pycache__ folders
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

CMD ["/app/start.sh"]