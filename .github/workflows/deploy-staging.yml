name: Deploy to Production

on:
  push:
    branches: [main]

env:
  ACR_NAME: instinctregistry.azurecr.io
  RESOURCE_GROUP: instinct
  REGION: westus
  WEB_APP: web
  SCRAPER_APP: scraper-new  # Updated to use the new scraper app
  DISCORD_APP: discord
  TIMESTAMP: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_NAME }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push web image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./backend/Dockerfile.web
        push: true
        tags: |
          ${{ env.ACR_NAME }}/backend-web:latest
          ${{ env.ACR_NAME }}/backend-web:${{ env.TIMESTAMP }}

    - name: Build and push discord image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./backend/Dockerfile.discord
        push: true
        tags: |
          ${{ env.ACR_NAME }}/backend-discord:latest
          ${{ env.ACR_NAME }}/backend-discord:${{ env.TIMESTAMP }}

    - name: Build and push scraper image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./backend/Dockerfile.scraper
        push: true
        tags: |
          ${{ env.ACR_NAME }}/backend-scraper:latest
          ${{ env.ACR_NAME }}/backend-scraper:${{ env.TIMESTAMP }}

    - name: Set short SHA
      id: vars
      run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

    - name: Deploy updated images to Production Container Apps
      run: |
        # Deploy Web App
        az containerapp update --name $WEB_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-web:$TIMESTAMP \
          --revision-suffix prod-${{ env.SHORT_SHA }}
    
        # Deploy Scraper App
        az containerapp update --name $SCRAPER_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-scraper:$TIMESTAMP \
          --revision-suffix prod-${{ env.SHORT_SHA }}
    
        # Deploy Discord App
        az containerapp update --name $DISCORD_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-discord:$TIMESTAMP \
          --revision-suffix prod-${{ env.SHORT_SHA }}
    
        # Get revision names with simpler query approach
        QUERY_PATTERN="prod-${{ env.SHORT_SHA }}"
        echo "WEB_REVISION=$(az containerapp revision list --name $WEB_APP --resource-group $RESOURCE_GROUP --query "[?contains(name, '$QUERY_PATTERN')].name" -o tsv)" >> $GITHUB_ENV
        echo "SCRAPER_REVISION=$(az containerapp revision list --name $SCRAPER_APP --resource-group $RESOURCE_GROUP --query "[?contains(name, '$QUERY_PATTERN')].name" -o tsv)" >> $GITHUB_ENV
        echo "DISCORD_REVISION=$(az containerapp revision list --name $DISCORD_APP --resource-group $RESOURCE_GROUP --query "[?contains(name, '$QUERY_PATTERN')].name" -o tsv)" >> $GITHUB_ENV
    
    - name: Create deployment summary
      id: summary
      run: |
        echo "## Production Deployment Complete! :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Short SHA**: $SHORT_SHA" >> $GITHUB_STEP_SUMMARY
        echo "- **Web App Revision**: $WEB_REVISION" >> $GITHUB_STEP_SUMMARY
        echo "- **Scraper App Revision**: $SCRAPER_REVISION" >> $GITHUB_STEP_SUMMARY
        echo "- **Discord App Revision**: $DISCORD_REVISION" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        WEB_URL=$(az containerapp revision show --name $WEB_APP --resource-group $RESOURCE_GROUP --revision $WEB_REVISION --query "properties.fqdn" -o tsv || echo "Not available")
        echo "### Production URLs" >> $GITHUB_STEP_SUMMARY
        echo "- **Web App**: https://$WEB_URL" >> $GITHUB_STEP_SUMMARY

    - name: Create deployment tag
      run: |
        git tag production-${SHORT_SHA}
        git push origin production-${SHORT_SHA} || echo "Warning: Could not push tag (missing permissions?)"

    - name: Check container logs
      run: |
        echo "### Web App Logs" >> $GITHUB_STEP_SUMMARY
        az containerapp logs show --name $WEB_APP --resource-group $RESOURCE_GROUP --tail 50 >> $GITHUB_STEP_SUMMARY || echo "No logs available" >> $GITHUB_STEP_SUMMARY

        echo "### Scraper App Logs" >> $GITHUB_STEP_SUMMARY
        az containerapp logs show --name $SCRAPER_APP --resource-group $RESOURCE_GROUP --tail 50 >> $GITHUB_STEP_SUMMARY || echo "No logs available" >> $GITHUB_STEP_SUMMARY

        echo "### Discord App Logs" >> $GITHUB_STEP_SUMMARY
        az containerapp logs show --name $DISCORD_APP --resource-group $RESOURCE_GROUP --tail 50 >> $GITHUB_STEP_SUMMARY || echo "No logs available" >> $GITHUB_STEP_SUMMARY