name: Promote to Production
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag or SHA to promote to production'
        required: true
        type: string
      confirm:
        description: 'Type "confirm" to verify promotion to production'
        required: true
        type: string

env:
  ACR_NAME: instinctregistry.azurecr.io
  RESOURCE_GROUP: instinct
  REGION: westus
  WEB_APP: web
  SCRAPER_APP: scraper
  DISCORD_APP: discord

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate confirmation
        if: ${{ inputs.confirm != 'confirm' }}
        run: |
          echo "Error: You must type 'confirm' to proceed with production deployment"
          exit 1

  promote-to-production:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.version }}

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_NAME }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Get SHA for version
      id: get-sha
      run: |
        if [[ "${{ inputs.version }}" == *"staging-"* ]]; then
          VERSION="${{ inputs.version }}"
          SHA=${VERSION#staging-}
        else
          SHA="${{ inputs.version }}"
        fi
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Tag images for production
      run: |
        # Tag the SHA images as production/latest
        SHA=${{ steps.get-sha.outputs.sha }}
        
        # Pull, tag and push web image
        docker pull $ACR_NAME/backend-web:$SHA
        docker tag $ACR_NAME/backend-web:$SHA $ACR_NAME/backend-web:production
        docker tag $ACR_NAME/backend-web:$SHA $ACR_NAME/backend-web:latest
        docker push $ACR_NAME/backend-web:production
        docker push $ACR_NAME/backend-web:latest
        
        # Pull, tag and push scraper image
        docker pull $ACR_NAME/backend-scraper:$SHA
        docker tag $ACR_NAME/backend-scraper:$SHA $ACR_NAME/backend-scraper:production
        docker tag $ACR_NAME/backend-scraper:$SHA $ACR_NAME/backend-scraper:latest
        docker push $ACR_NAME/backend-scraper:production
        docker push $ACR_NAME/backend-scraper:latest
        
        # Pull, tag and push discord image
        docker pull $ACR_NAME/backend-discord:$SHA
        docker tag $ACR_NAME/backend-discord:$SHA $ACR_NAME/backend-discord:production
        docker tag $ACR_NAME/backend-discord:$SHA $ACR_NAME/backend-discord:latest
        docker push $ACR_NAME/backend-discord:production
        docker push $ACR_NAME/backend-discord:latest

    - name: Deploy to production Container Apps
      run: |
        SHA=${{ steps.get-sha.outputs.sha }}
        
        # Update production with latest tag (which now points to the promoted SHA)
        az containerapp update --name $WEB_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-web:latest
          
        az containerapp update --name $SCRAPER_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-scraper:latest
          
        az containerapp update --name $DISCORD_APP --resource-group $RESOURCE_GROUP \
          --image $ACR_NAME/backend-discord:latest

    - name: Create deployment summary
      run: |
        echo "## Production Deployment Successful! :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **SHA**: ${{ steps.get-sha.outputs.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Images**: backend-web:prod-${{ steps.get-sha.outputs.sha }}, backend-scraper:prod-${{ steps.get-sha.outputs.sha }}, backend-discord:prod-${{ steps.get-sha.outputs.sha }}" >> $GITHUB_STEP_SUMMARY
    
    - name: Create production release tag
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git tag production-${{ steps.get-sha.outputs.sha }}
        git push origin production-${{ steps.get-sha.outputs.sha }}