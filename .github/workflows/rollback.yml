name: Rollback Deployment
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag or SHA to roll back to'
        required: true
        type: string
      environment:
        description: 'Environment to roll back (staging or production)'
        required: true
        type: choice
        options:
          - staging
          - production
      confirm:
        description: 'Type "rollback" to confirm this action'
        required: true
        type: string

env:
  ACR_NAME: instinctregistry.azurecr.io
  RESOURCE_GROUP: instinct

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate confirmation
        if: ${{ inputs.confirm != 'rollback' }}
        run: |
          echo "Error: You must type 'rollback' to proceed with rollback"
          exit 1

  rollback:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - name: Set environment-specific variables
      id: set-env
      run: |
        # Since we're using revisions instead of separate environments
        echo "web_app=web" >> $GITHUB_OUTPUT
        echo "scraper_app=scraper" >> $GITHUB_OUTPUT
        echo "discord_app=discord" >> $GITHUB_OUTPUT

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get SHA for version
      id: get-sha
      run: |
        VERSION="${{ inputs.version }}"
        # Handle different tag formats
        if [[ "$VERSION" == *"${{ inputs.environment }}-"* ]]; then
          SHA=${VERSION#*-}
        else
          SHA="$VERSION"
        fi
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Rollback Container Apps
      run: |
        SHA=${{ steps.get-sha.outputs.sha }}
        
        # Rollback by updating to specific SHA-tagged images
        if [[ "${{ inputs.environment }}" == "production" ]]; then
          # Pull the old SHA images and tag them as latest
          docker pull $ACR_NAME/backend-web:$SHA
          docker tag $ACR_NAME/backend-web:$SHA $ACR_NAME/backend-web:latest
          docker push $ACR_NAME/backend-web:latest
          
          docker pull $ACR_NAME/backend-scraper:$SHA
          docker tag $ACR_NAME/backend-scraper:$SHA $ACR_NAME/backend-scraper:latest
          docker push $ACR_NAME/backend-scraper:latest
          
          docker pull $ACR_NAME/backend-discord:$SHA
          docker tag $ACR_NAME/backend-discord:$SHA $ACR_NAME/backend-discord:latest
          docker push $ACR_NAME/backend-discord:latest
          
          # Update production apps with latest tag (now pointing to rollback SHA)
          az containerapp update --name ${{ steps.set-env.outputs.web_app }} \
            --resource-group $RESOURCE_GROUP \
            --image $ACR_NAME/backend-web:latest
            
          az containerapp update --name ${{ steps.set-env.outputs.scraper_app }} \
            --resource-group $RESOURCE_GROUP \
            --image $ACR_NAME/backend-scraper:latest
            
          az containerapp update --name ${{ steps.set-env.outputs.discord_app }} \
            --resource-group $RESOURCE_GROUP \
            --image $ACR_NAME/backend-discord:latest
        else
          # For staging rollbacks, just make sure we can find the staging revision
          for APP in ${{ steps.set-env.outputs.web_app }} ${{ steps.set-env.outputs.scraper_app }} ${{ steps.set-env.outputs.discord_app }}; do
            REVISION_NAME=$(az containerapp revision list \
              --name $APP \
              --resource-group $RESOURCE_GROUP \
              --query "[?contains(name, 'staging-$SHA')].name" -o tsv)
              
            if [ -n "$REVISION_NAME" ]; then
              echo "Found staging revision $REVISION_NAME for $APP"
            else
              echo "Staging revision with SHA $SHA not found for app $APP"
              exit 1
            fi
          done
          
          echo "Staging revisions with SHA $SHA are available to test"
        fi

    - name: Create rollback summary
      run: |
        echo "## Rollback Successful! :rewind:" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Rolled back to**: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **SHA**: ${{ steps.get-sha.outputs.sha }}" >> $GITHUB_STEP_SUMMARY